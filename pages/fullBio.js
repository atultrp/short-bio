import React, { useEffect, useState } from 'react'
import { BsArrowRight, BsWhatsapp } from 'react-icons/bs'
import { TiSocialTwitter } from 'react-icons/ti'
import {
  WhatsappShareButton,
  TwitterShareButton
} from 'next-share';
import Link from 'next/link';
import data from '../data/bioData.json'
import { useRouter } from 'next/router';
import Head from 'next/head';
import Card from '@/components/Card';
import { randomIndexId, shuffleArray } from '@/utils/utils';

const fullBio = () => {

  const [bioData, setBioData] = useState()
  const [briefBioContent, setBriefBioContent] = useState()
  const [shareUrl, setShareUrl] = useState("")
  const router = useRouter();
  const id = router.query.id
  const [recommendedBio, setRecommendedBio] = useState()
  const [funfacts, setFunfacts] = useState()

  useEffect(() => {
    if (id) {
      // Recommended Bio
      let currentBio = data.filter((item) => item.id === parseInt(id))
      let currentBioProfession = currentBio[0]?.profession.toLowerCase().split(", ")
      let tempData = data.filter((item) => item.id !== parseInt(id))
      let rcmdData = tempData?.filter((item) => {
        let itemProfession = item.profession.toLowerCase().split(", ")
        for (let i of itemProfession) {
          if (currentBioProfession.includes(i)) {
            return item
          }
        }
      })

      // All data other than Recommended Bio and Current Bio
      let tempOtherData = tempData.filter((item) => {
        if (!rcmdData.includes(item)) {
          return item
        }
      })

      // Setting Recommended Bio
      if (rcmdData.length >= 3) {
        rcmdData = shuffleArray(rcmdData)
        setRecommendedBio(rcmdData.slice(0, 3))
      }
      else if (rcmdData.length === 2) {
        rcmdData = shuffleArray(rcmdData)
        let finalRcmdData = [...rcmdData, tempOtherData[randomIndexId(tempOtherData)[0]]]
        setRecommendedBio(finalRcmdData)
      }
      else if (rcmdData.length === 1) {
        let finalRcmdData = [...rcmdData, tempOtherData[randomIndexId(tempOtherData)[0]], tempOtherData[randomIndexId(tempOtherData)[1]]]
        setRecommendedBio(finalRcmdData)
      }
      else {
        let finalRcmdData = [tempOtherData[randomIndexId(tempOtherData)[0]], tempOtherData[randomIndexId(tempOtherData)[1]], tempOtherData[randomIndexId(tempOtherData)[2]]]
        setRecommendedBio(finalRcmdData)
      }

      // Current Bio Data and Share Url
      setBioData(currentBio[0])
      setBriefBioContent(currentBio[0]?.briefBio?.split("\n\n"))
      setShareUrl(window.location.href)

      // Fun Facts
      let tempFunfacts = currentBio[0]?.funfacts?.split("\n")
      let tempFunfactsArr = []

      for (let i = 1; i < tempFunfacts?.length - 1; i++) {
        tempFunfactsArr.push(tempFunfacts[i]?.replace(/[",]+/g, ""))
      }
      setFunfacts(tempFunfactsArr)
    }
  }, [id])

  console.log(bioData?.funfacts)

  return (
    <>
      <Head>
        <title>Short Bio - {bioData?.name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='mx-3 px-3 md:mx-10 md:px-2 my-4'>
        <div className="sm:flex items-center sm:px-7 justify-between w-full border-b-2 border-gray-100 py-4 sticky top-14 sm:top-[88px] z-30 bg-white">

          <div className='flex items-center'>
            <img alt="pic" src={bioData?.image} className="w-28 h-28 sm:w-36 sm:h-36 rounded-full flex-shrink-0 object-cover object-center" />
            <span className="flex-grow flex flex-col ml-4 sm:ml-10">
              <span className="text-right sm:text-left title-font font-medium mr-0 ml-auto sm:ml-0 text-gray-900 tracking-widest uppercase text-sm sm:text-base">{bioData?.name}</span>
              <span className="text-right sm:text-left mr-0 ml-auto sm:ml-0 w-fit text-xs font-medium tracking-widest uppercase">{bioData?.profession}</span>
              <span className="text-right sm:text-left text-gray-400 text-xs tracking-widest mt-0.5 mr-0 ml-auto sm:ml-0">({bioData?.origin})</span>
            </span>
          </div>

          <div className='sm:flex'>
            {/* Share */}
            <div className="flex items-center w-full justify-end">
              <WhatsappShareButton
                url={shareUrl} >
                <BsWhatsapp className='text-2xl text-green-500 mr-4 hover:scale-125 ease-in-out duration-200' />
              </WhatsappShareButton>
              <TwitterShareButton
                url={shareUrl} >
                <TiSocialTwitter className='text-4xl text-rose-400 mr-4 hover:scale-125 ease-in-out duration-200' />
              </TwitterShareButton>
            </div>
          </div>
        </div>

        <div className='mb-8 sm:px-7 mt-3 sm:mt-6'>
          {briefBioContent?.map((item, index) => {
            return (
              <p className="leading-relaxed mb-2" key={index}>
                {item}
              </p>
            )
          })}
        </div>

        {funfacts?.length !== 0 && <div className='mb-8 sm:px-7 mt-3 sm:mt-6'>
          <h2 className="custom-font uppercase text-xl md:text-2xl font-semibold bg-gradient-to-t from-rose-500 to-pink-400 text-transparent bg-clip-text">Fun Facts</h2>
          <ul style={{ listStyle: "disc" }} className="ml-4 mt-2">
            {funfacts?.map((item, index) => {
              return (
                <li className="leading-relaxed mb-1" key={index} >
                  {item}
                </li>
              )
            })}
          </ul>
        </div>}

        <div className="cursor-pointer w-fit mx-auto my-6 md:my-12">
          <Link href={"/"}>
            <div className='text-rose-400 flex items-center space-x-1 hover:scale-110 duration-300 hover:underline hover:underline-offset-8'>
              <span className='font-semibold'>
                Other Famous Personalities
              </span>
              <BsArrowRight className='text-xl' />
            </div>
          </Link>
        </div>
      </div>

      <div className='mt-3 md:mt-6 mx-6 lg:mx-16'>
        <h2 className="custom-font uppercase text-2xl md:text-4xl font-semibold bg-gradient-to-t from-rose-500 to-pink-400 text-transparent bg-clip-text">Recommended Bio</h2>
        <div className='my-4 flex flex-wrap'>
          {recommendedBio && recommendedBio.map((item, index) => {
            if (index === 2) {
              return <Card key={index} data={item} customClasses="hidden 2xl:block" />
            }
            return <Card key={index} data={item} />
          })}
        </div>
        <div className="cursor-pointer w-fit mx-auto my-3 md:my-6">
          <Link href={"/"}>
            <div className='text-rose-400 flex items-center space-x-1 hover:scale-110 duration-300 hover:underline hover:underline-offset-8'>
              <span className='font-semibold'>
                View More
              </span>
              <BsArrowRight className='text-xl' />
            </div>
          </Link>
        </div>
      </div>
    </>
  )
}

export default fullBio